<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MCU课程设计</title>
      <link href="/2022/09/05/MCU/"/>
      <url>/2022/09/05/MCU/</url>
      
        <content type="html"><![CDATA[<h1 id="基于stc15f2k60s2的DC-DC电源主控板设计"><a href="#基于stc15f2k60s2的DC-DC电源主控板设计" class="headerlink" title="基于stc15f2k60s2的DC-DC电源主控板设计"></a>基于stc15f2k60s2的DC-DC电源主控板设计</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MCU 系统综合实验的课程设计，采用单片机 （stc15f2k60s2） 和屏幕<br>（0.96寸oled）并利用旋转编码器（EC11）进行交互设计，主要功能为boost升压电源(可修改为buck)。</p><p>系统实现了目标电压可调的boost升压电路，多个菜单选项的选择、显示示例和一些基础实验。</p><h2 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h2><p>硬件使用 立创EDA标准版 绘制，原理图如下：<br><img src="/2022/09/05/MCU/img.png" alt="img.png"><br>使用type-C接口供电，未设计ch340，只做供电。需要额外的USB转TTL作为程序烧入以及串口输出（接口已引出），使用仅使用ec11作为交互设备，有左旋，右旋，按下三种动作。</p><p>PCB 图形（铺铜隐藏）：<br><img src="/2022/09/05/MCU/img_4.png" alt="img_4.png"><br>PCB 3D图形 ：<br><img src="/2022/09/05/MCU/img_5.png" alt="img_5.png"></p><h2 id="Firmware"><a href="#Firmware" class="headerlink" title="Firmware"></a>Firmware</h2><p>文件没有整理，，固件结构如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Firmware</span><br><span class="line"> │  PCA-PWM.uvproj</span><br><span class="line"> │  config.h             时钟配置</span><br><span class="line"> │  STC15Fxxxx.H</span><br><span class="line"> │  main-pca-pwm.c       主程序</span><br><span class="line"> │  timer.c              库文件-定时器</span><br><span class="line"> │  timer.h</span><br><span class="line"> │  Soft_UART.c          库文件-串口</span><br><span class="line"> │  Soft_UART.h</span><br><span class="line"> │  PCA.c                库文件-硬件pwm</span><br><span class="line"> │  PCA.h</span><br><span class="line"> │  GPIO.c               库文件-GPIO</span><br><span class="line"> │  GPIO.h</span><br><span class="line"> │  ADC.c                库文件-ADC</span><br><span class="line"> │  ADC.h</span><br><span class="line"> │  delay.c              库文件-延时              </span><br><span class="line"> │  delay.h</span><br><span class="line"> │  Exti.c               库文件-外部中断</span><br><span class="line"> │  Exti.h</span><br><span class="line"> │  iic.c                软IIC文件</span><br><span class="line"> │  iic.h</span><br><span class="line"> │  pid.c                pid文件</span><br><span class="line"> │  pid.h</span><br><span class="line"> │  oled.c               <span class="number">0.96</span>寸oled驱动库</span><br><span class="line"> │  oled.h</span><br><span class="line"> │  font.h</span><br><span class="line"> │  bmp.h</span><br><span class="line"> │  menu.c               菜单ui文件</span><br><span class="line"> │  menu.h</span><br><span class="line"> │  ec11.c               ec11驱动库</span><br><span class="line"> │  ec11.h</span><br><span class="line"> └─ </span><br></pre></td></tr></table></figure><p>程序可参照注释阅读，具体使用方法请参考源文件内的注释以及实现。</p><p>编码方式为GB2312<br>单片机使用 内部晶振，主频为22.118400M(修改可能串口波特率会更改)<br>串口波特率为 9600bps<br>pwm频率为10k<br>控制频率为3k(测试不能太高，算不过来)</p><p>共设计两级菜单<br>通过旋转编码器按键 进入和退出，在电源控制界面，左旋和右旋为目标电压增减。其余界面为示例功能切换，如动画切换，串口更改输出。<br>最初子菜单后，该功能取消，即电压控制定时器关闭</p><h2 id="实物图"><a href="#实物图" class="headerlink" title="实物图"></a>实物图</h2><p>焊接完成效果<img src="/2022/09/05/MCU/ecf456dc54abe343a220bf3e79b517c.jpg"><br>主菜单<img src="/2022/09/05/MCU/IMG_20220602_155214.jpg"><br>调节目标电压<img src="/2022/09/05/MCU/IMG_20220602_155222.jpg"><br>动画效果<img src="/2022/09/05/MCU/IMG_20220602_155237.jpg"><br>其余功能只是作为平时实验累加上去，并无难度，遂不展示</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>难点主要在于调试boost稳压，因不可debug 调试起来难以观测内部变量，对于实时控制系统有点增加难度<br>其次是主频和adc性能都较为弱，不过因为其实要求不高，所以还能用，纹波测试下来也不大<br>缺点：不能做到线性稳压，会有所偏移，一是我 采样模块的拟合误差，一个是stc本身的 adc只有10位，且有误差。</p><h2 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h2><p><a href="https://gitee.com/zsa1/MCU/raw/master/MCU_Boost.zip">点击下载 MCU_Boost.zip</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow 学习笔记</title>
      <link href="/2022/09/04/tensorflow/"/>
      <url>/2022/09/04/tensorflow/</url>
      
        <content type="html"><![CDATA[<p> mnist手写数字识别库 训练例程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;TF_CPP_MIN_LOG_LEVEL&#x27;</span>] = <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line">import tensorflow as tf</span><br><span class="line">from tensorflow import keras</span><br><span class="line">from tensorflow.keras import layers, optimizers, datasets</span><br><span class="line"></span><br><span class="line"># 训练集 和 测试集 x是图片数字 y是 数字大小</span><br><span class="line">(x, y), (x_val, y_val) = datasets.mnist.load_data()</span><br><span class="line">x = <span class="number">2</span> * tf.convert_to_tensor(x, dtype=tf.float32) / <span class="number">255.</span> - <span class="number">1</span></span><br><span class="line">y = tf.convert_to_tensor(y, dtype=tf.int32)</span><br><span class="line">y = tf.one_hot(y, depth=<span class="number">10</span>)  # [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]---&gt;<span class="number">9</span></span><br><span class="line">print(x.shape, y.shape)</span><br><span class="line">train_dataset = tf.data.Dataset.from_tensor_slices((x, y))</span><br><span class="line">print(train_dataset)</span><br><span class="line">#分成<span class="number">200</span>份</span><br><span class="line">train_dataset = train_dataset.batch(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line"># 创建三层 <span class="number">784</span>-&gt;<span class="number">512</span>-&gt;<span class="number">256</span>-&gt;<span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model = keras.Sequential([</span><br><span class="line">    layers.Dense(<span class="number">512</span>, activation=<span class="string">&#x27;relu&#x27;</span>),</span><br><span class="line">    layers.Dense(<span class="number">256</span>, activation=<span class="string">&#x27;relu&#x27;</span>),</span><br><span class="line">    layers.Dense(<span class="number">10</span>)])</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">优化器 optimizers </span><br><span class="line">SGD 随机梯度下降法，支持动量参数，支持学习衰减率，支持Nesterov动量</span><br><span class="line">learning_rate：大或等于<span class="number">0</span>的浮点数，学习率</span><br><span class="line">momentum：大或等于<span class="number">0</span>的浮点数，动量参数</span><br><span class="line">decay：大或等于<span class="number">0</span>的浮点数，每次更新后的学习率衰减值</span><br><span class="line">nesterov：布尔值，确定是否使用Nesterov动量</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"># 随机梯度下降法，支持动量参数，支持学习衰减率，支持Nesterov动量</span><br><span class="line">optimizer = optimizers.SGD(learning_rate=<span class="number">0.001</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def train_epoch(epoch):</span><br><span class="line">    # Step4.loop</span><br><span class="line">    <span class="keyword">for</span> step, (x, y) in enumerate(train_dataset):</span><br><span class="line">        with tf.GradientTape() as tape:</span><br><span class="line">            # [b, <span class="number">28</span>, <span class="number">28</span>] =&gt; [b, <span class="number">784</span>]</span><br><span class="line">            x = tf.reshape(x, (<span class="number">-1</span>, <span class="number">28</span> * <span class="number">28</span>))</span><br><span class="line">            # Step1. compute output</span><br><span class="line">            # [b, <span class="number">784</span>] =&gt; [b, <span class="number">10</span>]</span><br><span class="line">            out = model(x)</span><br><span class="line">            # Step2. compute loss</span><br><span class="line">            # reduce_sum按照求和的方式对矩阵降维</span><br><span class="line">            loss = tf.reduce_sum(tf.square(out - y)) / x.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        # Step3. optimize and update w1, w2, w3, b1, b2, b3</span><br><span class="line">        grads = tape.gradient(loss, model.trainable_variables)</span><br><span class="line">        <span class="meta"># w<span class="string">&#x27; = w - lr * grad</span></span></span><br><span class="line"><span class="string"><span class="meta">        optimizer.apply_gradients(zip(grads, model.trainable_variables))</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">        if step % 299 == 0:</span></span></span><br><span class="line"><span class="string"><span class="meta">            print(epoch, step, &#x27;</span>loss:<span class="string">&#x27;, loss.numpy())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">def train():</span></span></span><br><span class="line"><span class="string"><span class="meta">    for epoch in range(50):</span></span></span><br><span class="line"><span class="string"><span class="meta">        train_epoch(epoch)</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">if __name__ == &#x27;</span>__main__<span class="string">&#x27;:</span></span></span><br><span class="line"><span class="string"><span class="meta">    train()</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br></pre></td></tr></table></figure><p>创建张量常用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tf.constant()</span><br><span class="line">tf.convert_to_tensor()</span><br><span class="line">tf.ones()</span><br><span class="line">tf.zeros()</span><br><span class="line">tf.fill()</span><br><span class="line">tf.ones_like()</span><br><span class="line">tf.random.normal()</span><br><span class="line">tf.random.uniform()</span><br><span class="line">tf.<span class="built_in">range</span>()</span><br><span class="line">tf.cast()</span><br><span class="line">tf.Variable()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=tf.random.normal([<span class="number">4</span>,<span class="number">784</span>])</span><br><span class="line">net=layers.Dense(<span class="number">10</span>)</span><br><span class="line">net(x).shape</span><br><span class="line">net.kernel.shape</span><br><span class="line">net.bias.shape</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DSP28379学习笔记 （二）——修改cmd文件 扩容.txt等ram flash</title>
      <link href="/2022/08/16/dsp28379-2/"/>
      <url>/2022/08/16/dsp28379-2/</url>
      
        <content type="html"><![CDATA[<h1 id="DSP28379学习笔记-（二）——修改cmd文件-扩容-txt等ram-flash"><a href="#DSP28379学习笔记-（二）——修改cmd文件-扩容-txt等ram-flash" class="headerlink" title="DSP28379学习笔记 （二）——修改cmd文件 扩容.txt等ram flash"></a>DSP28379学习笔记 （二）——修改cmd文件 扩容.txt等ram flash</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>软件：ccs11.1.0<br>硬件：LAUNCHXL-F28379D<br>日期：2022.8.16</p><h2 id="问题及修改cmd文件"><a href="#问题及修改cmd文件" class="headerlink" title="问题及修改cmd文件"></a>问题及修改cmd文件</h2><p>这段时间把工程移植到了dsp上，基于driverlib，在ti的例程上修改部分底层配置。在debug和 release模式下都遇到了 内存不够 ，需要修改<br>cmd文件的情况。</p><h3 id="debug模式下"><a href="#debug模式下" class="headerlink" title="debug模式下"></a>debug模式下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">program will not fit into available memory, or the section contains a call site that requires a trampoline that can<span class="number">&#x27;</span>t be generated <span class="keyword">for</span> this section. placement with alignment/blocking fails <span class="keyword">for</span> section <span class="string">&quot;.text&quot;</span> size <span class="number">0x455e</span> page <span class="number">0.</span>  Available memory ranges:<span class="number">2837</span>xD_RAM_lnk_cpu1.cmd/<span class="number">0.28379</span>_temp__CPU1/<span class="number">1.</span>cmdline <span class="number">81</span>C/C++ Problem</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>事先分配的ram的大小已经满了，且page0 里也几乎没有空余的ram</strong><br><img src="https://img-blog.csdnimg.cn/b14c74cd111547acb50508a9a349ee61.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/0af426a038034388962af3e52691239f.png" alt="在这里插入图片描述"><br><strong>找到page1 中空余的空间</strong><br><img src="https://img-blog.csdnimg.cn/8fc6833d03f64a9c8f0b0c5582ee6334.png" alt="在这里插入图片描述"><br><strong>移到page 0 中，并分配给 .text</strong><br><img src="https://img-blog.csdnimg.cn/1f66925845d94531b41a7eb7c4768ffb.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/fd0e921afb314d9e9971993d2e98a6c2.png" alt="在这里插入图片描述"></p><h2 id="release模式下"><a href="#release模式下" class="headerlink" title="release模式下"></a>release模式下</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">program will not fit into available memory, or the section contains a call site that requires a trampoline that can<span class="number">&#x27;</span>t be generated <span class="keyword">for</span> this section. placement with alignment/blocking fails <span class="keyword">for</span> section <span class="string">&quot;.cinit&quot;</span> size <span class="number">0x79</span> page <span class="number">0.</span>  Available memory ranges:<span class="number">2837</span>xD_FLASH_lnk_cpu1.cmd/<span class="number">0.28379</span>_temp__CPU1/<span class="number">1.</span>cmdline <span class="number">78</span>C/C++ Problem</span><br></pre></td></tr></table></figure><p><strong>同理，把同page 下的空内存分配过去，没有，就从其他 page下移空闲内存过来</strong></p><p><img src="https://img-blog.csdnimg.cn/c790e6136e3c4df1b9f2c6e6f589b132.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/936d9c91824441bd8920b8d30288ce0f.png" alt="在这里插入图片描述"><br><strong>这里我直接分配 FLASHE过去</strong><br><img src="https://img-blog.csdnimg.cn/63a6232438b04dcf9632816a4224ddc3.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dsp28379 </tag>
            
            <tag> ccs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DSP28379学习笔记 （一）——GPIO基本操作</title>
      <link href="/2022/08/08/dsp28379-1/"/>
      <url>/2022/08/08/dsp28379-1/</url>
      
        <content type="html"><![CDATA[<h1 id="DSP28379学习笔记-（一）——GPIO基本操作"><a href="#DSP28379学习笔记-（一）——GPIO基本操作" class="headerlink" title="DSP28379学习笔记 （一）——GPIO基本操作"></a>DSP28379学习笔记 （一）——GPIO基本操作</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>软件：ccs11.1.0<br>硬件：LAUNCHXL-F28379D<br>日期：2022.8.8  </p><h3 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h3><p><img src="https://img-blog.csdnimg.cn/ccab05a0b90c4e25bb1cf7b8b8f96b49.png" alt="在这里插入图片描述"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>在官方例程上删改</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123; Uint16 i; Uint32 j;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++) </span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">100000</span>; j++); </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Gpio_setup</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   EALLOW;</span><br><span class="line">      GpioCtrlRegs.GPAPUD.bit.GPIO31 = <span class="number">0</span>;   <span class="comment">// Enable pullup on GPIO34</span></span><br><span class="line">      GpioCtrlRegs.GPAMUX2.bit.GPIO31 = <span class="number">0</span>;  <span class="comment">// GPIO34 = GPIO34</span></span><br><span class="line">      GpioDataRegs.GPASET.bit.GPIO31 = <span class="number">1</span>;</span><br><span class="line">      <span class="comment">//GpioDataRegs.GPACLEAR.bit.GPIO31 = 1;</span></span><br><span class="line">      GpioCtrlRegs.GPADIR.bit.GPIO31 = <span class="number">1</span>;   <span class="comment">// GPIO34 = input</span></span><br><span class="line"></span><br><span class="line">      GpioCtrlRegs.GPBPUD.bit.GPIO34 = <span class="number">0</span>;   <span class="comment">// Enable pullup on GPIO34</span></span><br><span class="line">      GpioCtrlRegs.GPBMUX1.bit.GPIO34 = <span class="number">0</span>;  <span class="comment">// GPIO34 = GPIO34</span></span><br><span class="line">      GpioDataRegs.GPBSET.bit.GPIO34 = <span class="number">1</span>;</span><br><span class="line">      <span class="comment">//GpioDataRegs.GPBCLEAR.bit.GPIO34 = 1;</span></span><br><span class="line">      GpioCtrlRegs.GPBDIR.bit.GPIO34 = <span class="number">1</span>;   <span class="comment">// GPIO34 = input</span></span><br><span class="line">   EDIS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   InitSysCtrl();</span><br><span class="line">   DINT;</span><br><span class="line">   InitPieCtrl();</span><br><span class="line">   IER = <span class="number">0x0000</span>;</span><br><span class="line">   IFR = <span class="number">0x0000</span>;</span><br><span class="line">   InitPieVectTable();</span><br><span class="line">   Gpio_setup();</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        GpioDataRegs.GPATOGGLE.bit.GPIO31=<span class="number">1</span>;</span><br><span class="line">        GpioDataRegs.GPBTOGGLE.bit.GPIO34=<span class="number">1</span>;</span><br><span class="line">        delay();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dsp28379 </tag>
            
            <tag> ccs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32H7定时器触发多通道adc采样 DMA(hal)</title>
      <link href="/2022/05/13/dma-adc/"/>
      <url>/2022/05/13/dma-adc/</url>
      
        <content type="html"><![CDATA[<h1 id="stm32H7-HAL库-定时器触发多通道adc采样-DMA"><a href="#stm32H7-HAL库-定时器触发多通道adc采样-DMA" class="headerlink" title="stm32H7 HAL库 定时器触发多通道adc采样 DMA"></a>stm32H7 HAL库 定时器触发多通道adc采样 DMA</h1><p>ps：忙了一阵竞赛，考试，开始学点新东西</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>keil<br>stm32cubemx v1.9.1<br>stm32h750vbt6</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>外部时钟，时钟树好像只能手动配置<br><img src="https://img-blog.csdnimg.cn/4c63f683113345308ea8b5ae04489496.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2dc3fc37a7ff442180fab3e7a60efa9e.png" alt="在这里插入图片描述"></p><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><p>用的time6 ，50khz，修改 触发 输出参数中 的触发事件选择<br><img src="https://img-blog.csdnimg.cn/8628f2cf4ed043f09bd1a44809577c69.png" alt="在这里插入图片描述"></p><h3 id="adc"><a href="#adc" class="headerlink" title="adc"></a>adc</h3><p>选择 adc 和需要的通道口<br>我这选 adc1 和 3个通道<br><img src="https://img-blog.csdnimg.cn/8f7f88b8478346588234d10566a62c45.png" alt="在这里插入图片描述"></p><h3 id="DMA"><a href="#DMA" class="headerlink" title="DMA"></a>DMA</h3><p><img src="https://img-blog.csdnimg.cn/1dd7bf122dc448138a914e944146e633.png" alt="在这里插入图片描述"><br>首先说明 这样配置后功能是：<br><strong>开启adc_dma后，以50khz 触发 采样，每次 采样3个通道，不断循环，不需要后续再开启</strong></p><p>记得修改手动修改成  <strong>自己的adc通道和 通道个数</strong><br><img src="https://img-blog.csdnimg.cn/b21badd37ede411e98f663404c6c2db8.png" alt="在这里插入图片描述"><br>最后生成工程</p><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> DMA_BUF_SIZE 27</span></span><br><span class="line"><span class="keyword">volatile</span> <span class="type">uint16_t</span> DMABuf1[DMA_BUF_SIZE]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//线性校正</span></span><br><span class="line">HAL_ADCEx_Calibration_Start(&amp;hadc1,ADC_CALIB_OFFSET_LINEARITY, ADC_SINGLE_ENDED);  </span><br><span class="line">HAL_TIM_Base_Start(&amp;htim6);</span><br><span class="line">HAL_ADC_Start_DMA(&amp;hadc1, (<span class="type">uint32_t</span> *)DMABuf1,DMA_BUF_SIZE);</span><br></pre></td></tr></table></figure><h1 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h1><p>接3.3，gnd，和一个正弦波<br><img src="https://img-blog.csdnimg.cn/4a477cb64cc342dca28580ddfd501a90.png" alt="在这里插入图片描述"><br>正弦波转换后<br><img src="https://img-blog.csdnimg.cn/58aad67dcc4d4d53911de6606ba25f71.png" alt="在这里插入图片描述"></p><p>意外发现将默认的 编译器 从 5改到6 编译速度快了好多<br><img src="https://img-blog.csdnimg.cn/14001341fb9b4163b023a726ae737fe9.png" alt="在这里插入图片描述"><br>以及 stm32cubeide 真的难用。。。表达式里的变量都不自动实时更新，还没ccs好用。。。 又滚回到keil了，</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
            <tag> adc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rt-thread 学习笔记</title>
      <link href="/2021/10/06/rt-thread/"/>
      <url>/2021/10/06/rt-thread/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="创建led闪烁-加入串口设备-pwm配置-modbus主-x2F-从测试代码"><a href="#创建led闪烁-加入串口设备-pwm配置-modbus主-x2F-从测试代码" class="headerlink" title="创建led闪烁 加入串口设备 pwm配置 modbus主&#x2F;从测试代码"></a>创建led闪烁 加入串口设备 pwm配置 modbus主&#x2F;从测试代码</h1><h2 id="led灯闪烁"><a href="#led灯闪烁" class="headerlink" title="led灯闪烁"></a>led灯闪烁</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_TAG <span class="string">&quot;main&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_LVL DBG_LOG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdbg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_common.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED0_PIN    GET_PIN(C, 13)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/* set LED0 pin mode to output */</span></span><br><span class="line">    rt_pin_mode(LED0_PIN, PIN_MODE_OUTPUT);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (count++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* set LED0 pin level to high or low */</span></span><br><span class="line">        rt_pin_write(LED0_PIN, count % <span class="number">2</span>);</span><br><span class="line">        LOG_D(<span class="string">&quot;Hello RT-Thread!&quot;</span>);</span><br><span class="line">        rt_thread_mdelay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加入串口设备"><a href="#加入串口设备" class="headerlink" title="加入串口设备"></a>加入串口设备</h2><p>直接在board.h里 添加宏定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BSP_USING_UART6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BSP_UART2_TX_PIN       <span class="string">&quot;PA2&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BSP_UART2_RX_PIN       <span class="string">&quot;PA3&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="使用cubemx-配置hse"><a href="#使用cubemx-配置hse" class="headerlink" title="使用cubemx 配置hse"></a>使用cubemx 配置hse</h2><p>直接配时钟即可<br>不要勾选 分成.c&#x2F;.h<br>在rtt studio中会自动调用生成的 系统时钟配置<br><img src="https://img-blog.csdnimg.cn/d2004c66efc14772a2c6edef2454d6be.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAX3pzX2Rhd24=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>还要修改 HSE_VALUE</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> HSE_VALUE    ((uint32_t)8000000U) <span class="comment">/*!&lt; Value of the External oscillator in Hz */</span></span></span><br></pre></td></tr></table></figure><p><a href="https://club.rt-thread.org/ask/article/2443.html">构建排除</a></p><h2 id="配置pwm"><a href="#配置pwm" class="headerlink" title="配置pwm"></a>配置pwm</h2><p><a href="https://blog.csdn.net/qq_44744444/article/details/109555707?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163310798716780261972266%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=163310798716780261972266&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~times_rank-15-109555707.pc_v2_rank_blog_default&utm_term=rtthread%20%20pwm&spm=1018.2226.3001.4450">参考文章</a><br>如果要用pwm1的话，要在pwm_config.h里自己加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifdef</span> BSP_USING_PWM1</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> PWM1_CONFIG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PWM1_CONFIG                             \</span></span><br><span class="line"><span class="meta">    &#123;                                           \</span></span><br><span class="line"><span class="meta">       .tim_handle.Instance     = TIM1,         \</span></span><br><span class="line"><span class="meta">       .name                    = <span class="string">&quot;pwm1&quot;</span>,       \</span></span><br><span class="line"><span class="meta">       .channel                 = 0             \</span></span><br><span class="line"><span class="meta">    &#125;</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* PWM1_CONFIG */</span></span></span><br></pre></td></tr></table></figure><p>board.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BSP_USING_PWM1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BSP_USING_PWM1_CH1</span></span><br></pre></td></tr></table></figure><p>stm32f4xx_hal_conf.h<br>开启宏定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> HAL_TIM_MODULE_ENABLED</span></span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2006-2021, RT-Thread Development Team</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * SPDX-License-Identifier: Apache-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change Logs:</span></span><br><span class="line"><span class="comment"> * Date           Author       Notes</span></span><br><span class="line"><span class="comment"> * 2021-10-02     RT-Thread    first version</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;board.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_TAG <span class="string">&quot;main&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_LVL DBG_LOG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdbg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PWM_DEV_NAME        <span class="string">&quot;pwm1&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PWM_DEV_CHANNEL     1 &lt;&lt; 0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rt_device_pwm</span> *<span class="title">pwm_dev</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">pwm_thread_entry</span><span class="params">(<span class="type">void</span> *parameter)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">rt_uint32_t</span> period, pulse,dir=<span class="number">1</span>;</span><br><span class="line">    period = <span class="number">20000000</span>;  <span class="comment">//20ms</span></span><br><span class="line">    pulse = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    pwm_dev = (<span class="keyword">struct</span> rt_device_pwm *)rt_device_find(PWM_DEV_NAME);</span><br><span class="line">    <span class="keyword">if</span> (pwm_dev == RT_NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_kprintf(<span class="string">&quot;pwm sample run failed! can&#x27;t find %s device!\n&quot;</span>, PWM_DEV_NAME);</span><br><span class="line">        <span class="comment">//return RT_ERROR;</span></span><br><span class="line">    &#125;</span><br><span class="line">    rt_kprintf(<span class="string">&quot;pwm sample run ! find %s device!\n&quot;</span>, PWM_DEV_NAME);</span><br><span class="line"></span><br><span class="line">    rt_pwm_set(pwm_dev, PWM_DEV_CHANNEL, period, pulse);</span><br><span class="line"></span><br><span class="line">    rt_pwm_enable(pwm_dev, PWM_DEV_CHANNEL);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_thread_mdelay(<span class="number">50</span>);</span><br><span class="line">        <span class="keyword">if</span> (dir)</span><br><span class="line">               &#123;</span><br><span class="line">                   pulse += period*<span class="number">0.01</span>; </span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">               &#123;</span><br><span class="line">                   pulse -= period*<span class="number">0.01</span>; </span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span> (pulse &lt;= period*<span class="number">0.1</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   dir = <span class="number">1</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span> ( pulse&gt;=period*<span class="number">0.9</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   dir = <span class="number">0</span>;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">        rt_pwm_set(pwm_dev, PWM_DEV_CHANNEL, period, pulse);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">pwm_led_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">rt_thread_t</span> tid_pwm = RT_NULL;</span><br><span class="line"></span><br><span class="line">    <span class="type">rt_err_t</span> ret = RT_EOK;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    tid_pwm = rt_thread_create(<span class="string">&quot;t_pwm&quot;</span>,pwm_thread_entry, RT_NULL, <span class="number">512</span>, <span class="number">24</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (tid_pwm != RT_NULL)</span><br><span class="line">   &#123;</span><br><span class="line">       rt_thread_startup(tid_pwm);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       ret = RT_ERROR;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> ret;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">INIT_APP_EXPORT(pwm_led_init);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    pwm_led_init();</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="freemodbus-测试代码"><a href="#freemodbus-测试代码" class="headerlink" title="freemodbus 测试代码"></a>freemodbus 测试代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_TAG <span class="string">&quot;main&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_LVL DBG_LOG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdbg.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mb.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_mb_app.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SLAVE_ADDR      0x01</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PORT_NUM        2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PORT_BAUDRATE   115200</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PORT_PARITY     MB_PAR_EVEN</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_POLL_THREAD_PRIORITY  10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_SEND_THREAD_PRIORITY  RT_THREAD_PRIORITY_MAX - 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_POLL_CYCLE_MS 200</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> USHORT usSRegHoldBuf[S_REG_HOLDING_NREGS];</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">send_thread_entry</span><span class="params">(<span class="type">void</span> *parameter)</span></span><br><span class="line">&#123;</span><br><span class="line">    USHORT         *usRegHoldingBuf;</span><br><span class="line">    usRegHoldingBuf = usSRegHoldBuf;</span><br><span class="line">    <span class="type">rt_base_t</span> level;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Test Modbus Master */</span></span><br><span class="line">        level = rt_hw_interrupt_disable();</span><br><span class="line"></span><br><span class="line">        usRegHoldingBuf[<span class="number">0</span>] = (USHORT)(<span class="number">18</span>);</span><br><span class="line">        usRegHoldingBuf[<span class="number">1</span>] = (USHORT)(<span class="number">96</span>);</span><br><span class="line"></span><br><span class="line">        rt_hw_interrupt_enable(level);</span><br><span class="line"></span><br><span class="line">        rt_thread_mdelay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">mb_slave_poll</span><span class="params">(<span class="type">void</span> *parameter)</span></span><br><span class="line">&#123;</span><br><span class="line">    eMBInit(MB_RTU, SLAVE_ADDR, PORT_NUM, PORT_BAUDRATE, PORT_PARITY);</span><br><span class="line">    eMBEnable();</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        eMBPoll();</span><br><span class="line">        rt_thread_mdelay(<span class="number">50</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">mb_slave_samlpe</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">rt_uint8_t</span> is_init = <span class="number">0</span>;</span><br><span class="line">    <span class="type">rt_thread_t</span> tid1 = RT_NULL, tid2 = RT_NULL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_init &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_kprintf(<span class="string">&quot;sample is running\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> -RT_ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    tid1 = rt_thread_create(<span class="string">&quot;md_s_poll&quot;</span>, mb_slave_poll, RT_NULL, <span class="number">1024</span>, MB_POLL_THREAD_PRIORITY, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> (tid1 != RT_NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_thread_startup(tid1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> __exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tid2 = rt_thread_create(<span class="string">&quot;md_s_send&quot;</span>, send_thread_entry, RT_NULL, <span class="number">512</span>, MB_SEND_THREAD_PRIORITY, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> (tid2 != RT_NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_thread_startup(tid2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> __exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    is_init = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line"></span><br><span class="line">__exit:</span><br><span class="line">    <span class="keyword">if</span> (tid1)</span><br><span class="line">        rt_thread_delete(tid1);</span><br><span class="line">    <span class="keyword">if</span> (tid2)</span><br><span class="line">        rt_thread_delete(tid2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -RT_ERROR;</span><br><span class="line">&#125;</span><br><span class="line">MSH_CMD_EXPORT(mb_slave_samlpe, run a modbus slave sample);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    mb_slave_samlpe();</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="freemodbus-从机测试代码"><a href="#freemodbus-从机测试代码" class="headerlink" title="freemodbus 从机测试代码"></a>freemodbus 从机测试代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;board.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdevice.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_TAG <span class="string">&quot;main&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_LVL DBG_LOG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdbg.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mb.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mb_m.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mbconfig.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_mb_app.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> USHORT   usMRegInBuf[MB_MASTER_TOTAL_SLAVE_NUM][M_REG_INPUT_NREGS];</span><br><span class="line"><span class="keyword">extern</span> USHORT   usMRegHoldBuf[MB_MASTER_TOTAL_SLAVE_NUM][M_REG_HOLDING_NREGS];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SLAVE_ADDR      0x01</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PORT_NUM        2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PORT_BAUDRATE   115200</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PORT_PARITY     MB_PAR_NONE</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_POLL_THREAD_PRIORITY  10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_SEND_THREAD_PRIORITY  RT_THREAD_PRIORITY_MAX - 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_SEND_REG_START  2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_SEND_REG_NUM    2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_POLL_CYCLE_MS   800</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_READ_REG_NUM 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_READ_REG_ADDR 0x000f</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">send_thread_entry</span><span class="params">(<span class="type">void</span> *parameter)</span></span><br><span class="line">&#123;</span><br><span class="line">    eMBMasterReqErrCode error_code2 = MB_MRE_NO_ERR;</span><br><span class="line">    <span class="type">static</span> <span class="type">rt_uint16_t</span> error_count2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* 03 功能码 连续读取保持寄存器多个地址的数据 */</span></span><br><span class="line">        error_code2 =eMBMasterReqReadHoldingRegister( SLAVE_ADDR, MB_READ_REG_ADDR, MB_READ_REG_NUM, RT_WAITING_FOREVER );</span><br><span class="line">        <span class="comment">/* Record the number of errors */</span></span><br><span class="line">        <span class="keyword">if</span> (error_code2 != MB_MRE_NO_ERR)</span><br><span class="line">        &#123;</span><br><span class="line">            error_count2++;</span><br><span class="line"></span><br><span class="line">            rt_kprintf(<span class="string">&quot;\r\n \r\n error_code2 = %d, error_count2 = %d \r\n&quot;</span>,error_code2,error_count2);</span><br><span class="line"></span><br><span class="line">            error_code2 = MB_MRE_NO_ERR;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">      <span class="type">uint32_t</span> distance=<span class="number">0</span>;</span><br><span class="line">       rt_kprintf(<span class="string">&quot;HoldBuf[0] = %d, HoldBuf[1] = %d\r\n&quot;</span>,usMRegHoldBuf[SLAVE_ADDR<span class="number">-1</span>][MB_READ_REG_ADDR],usMRegHoldBuf[SLAVE_ADDR<span class="number">-1</span>][MB_READ_REG_ADDR+<span class="number">1</span>]);</span><br><span class="line">       <span class="comment">/*distance=usMRegHoldBuf[SLAVE_ADDR-1][MB_READ_REG_ADDR];</span></span><br><span class="line"><span class="comment">       distance&lt;&lt;=16;</span></span><br><span class="line"><span class="comment">       distance|=usMRegHoldBuf[SLAVE_ADDR-1][MB_READ_REG_ADDR+1];</span></span><br><span class="line"><span class="comment">       rt_kprintf(&quot;test_distance:%d mm&quot;,distance);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            rt_kprintf(&quot;\r\n&quot;);*/</span></span><br><span class="line">        &#125;</span><br><span class="line">        rt_thread_mdelay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">mb_master_poll</span><span class="params">(<span class="type">void</span> *parameter)</span></span><br><span class="line">&#123;</span><br><span class="line">    eMBMasterInit(MB_RTU, PORT_NUM, PORT_BAUDRATE, PORT_PARITY);</span><br><span class="line">    eMBMasterEnable();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        eMBMasterPoll();</span><br><span class="line">        rt_thread_mdelay(<span class="number">50</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">mb_master_samlpe</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">rt_uint8_t</span> is_init = <span class="number">0</span>;</span><br><span class="line">    <span class="type">rt_thread_t</span> tid1 = RT_NULL, tid2 = RT_NULL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_init &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_kprintf(<span class="string">&quot;sample is running\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> -RT_ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    tid1 = rt_thread_create(<span class="string">&quot;md_m_poll&quot;</span>, mb_master_poll, RT_NULL, <span class="number">512</span>, MB_POLL_THREAD_PRIORITY, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> (tid1 != RT_NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_thread_startup(tid1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> __exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tid2 = rt_thread_create(<span class="string">&quot;md_m_send&quot;</span>, send_thread_entry, RT_NULL, <span class="number">512</span>, MB_SEND_THREAD_PRIORITY, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> (tid2 != RT_NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_thread_startup(tid2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> __exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    is_init = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line"></span><br><span class="line">__exit:</span><br><span class="line">    <span class="keyword">if</span> (tid1)</span><br><span class="line">        rt_thread_delete(tid1);</span><br><span class="line">    <span class="keyword">if</span> (tid2)</span><br><span class="line">        rt_thread_delete(tid2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -RT_ERROR;</span><br><span class="line">&#125;</span><br><span class="line">MSH_CMD_EXPORT(mb_master_samlpe, run a modbus master sample);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    mb_master_samlpe();</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="外部中断-添加头文件-延时函数"><a href="#外部中断-添加头文件-延时函数" class="headerlink" title="外部中断 添加头文件  延时函数"></a>外部中断 添加头文件  延时函数</h1><h2 id="设置按键外部中断"><a href="#设置按键外部中断" class="headerlink" title="设置按键外部中断"></a>设置按键外部中断</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;board.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_TAG <span class="string">&quot;main&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_LVL DBG_LOG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdbg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> B1_PIN_NUM            GET_PIN(B,1)</span></span><br><span class="line"><span class="comment">/* 中断回调函数 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">B1_IRQ_CB</span><span class="params">(<span class="type">void</span> *args)</span></span><br><span class="line">&#123;</span><br><span class="line">    rt_kprintf(<span class="string">&quot;enter B1_IRQ_CB!\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    rt_pin_write(B1_PIN_NUM, PIN_HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">pin_beep_sample</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 按键0引脚为输入模式 */</span></span><br><span class="line">    rt_pin_mode(B1_PIN_NUM, PIN_MODE_INPUT_PULLUP);</span><br><span class="line">    <span class="comment">/* 绑定中断，下降沿模式，回调函数名为beep_on */</span></span><br><span class="line">    rt_pin_attach_irq(B1_PIN_NUM, PIN_IRQ_MODE_FALLING, B1_IRQ_CB, RT_NULL);</span><br><span class="line">    <span class="comment">/* 使能中断 */</span></span><br><span class="line">    rt_pin_irq_enable(B1_PIN_NUM, PIN_IRQ_ENABLE);</span><br><span class="line">    <span class="comment">/* 脱离中断回调函数 */</span></span><br><span class="line">   <span class="comment">// rt_pin_detach_irq(B1_PIN_NUM);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    pin_beep_sample();</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="开启硬件定时器"><a href="#开启硬件定时器" class="headerlink" title="开启硬件定时器"></a>开启硬件定时器</h2><h3 id="初始化配置部分"><a href="#初始化配置部分" class="headerlink" title="初始化配置部分"></a>初始化配置部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** if you want to use hardware timer you can use the following instructions.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * STEP 1, open hwtimer driver framework support in the RT-Thread Settings file</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * STEP 2, define macro related to the hwtimer</span></span><br><span class="line"><span class="comment"> *                 such as     #define BSP_USING_TIM  and</span></span><br><span class="line"><span class="comment"> *                             #define BSP_USING_TIM1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * STEP 3, copy your hardwire timer init function from stm32xxxx_hal_msp.c generated by stm32cubemx to the end of board.c file</span></span><br><span class="line"><span class="comment"> *                 such as     void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * STEP 4, modify your stm32xxxx_hal_config.h file to support hardwere timer peripherals. define macro related to the peripherals</span></span><br><span class="line"><span class="comment"> *                 such as     #define HAL_TIM_MODULE_ENABLED</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BSP_USING_TIM</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> BSP_USING_TIM</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BSP_USING_TIM3</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_TIM_Base_MspInit</span><span class="params">(TIM_HandleTypeDef* htim_base)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(htim_base-&gt;Instance==TIM3)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN TIM3_MspInit 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END TIM3_MspInit 0 */</span></span><br><span class="line">    <span class="comment">/* Peripheral clock enable */</span></span><br><span class="line">    __HAL_RCC_TIM3_CLK_ENABLE();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN TIM3_MspInit 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END TIM3_MspInit 1 */</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>硬件定时器设备的具体使用方式可以参考如下示例代码，示例代码的主要步骤如下：</p><p>首先根据定时器设备名称 “timer3” 查找设备获取设备句柄。</p><p>以读写方式打开设备 “timer3” 。</p><p>设置定时器超时回调函数。</p><p>设置定时器模式为周期性定时器，并设置超时时间为 5 秒，此时定时器启动。</p><p>延时 3500ms 后读取定时器时间，读取到的值会以秒和微秒的形式显示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_TAG <span class="string">&quot;main&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBG_LVL DBG_LOG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdbg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdevice.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HWTIMER_DEV_NAME   <span class="string">&quot;timer3&quot;</span>     <span class="comment">/* 定时器名称 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 定时器超时回调函数 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">rt_err_t</span> <span class="title function_">timeout_cb</span><span class="params">(<span class="type">rt_device_t</span> dev, <span class="type">rt_size_t</span> size)</span></span><br><span class="line">&#123;</span><br><span class="line">    rt_kprintf(<span class="string">&quot;this is hwtimer timeout callback fucntion!\n&quot;</span>);</span><br><span class="line">    rt_kprintf(<span class="string">&quot;tick is :%d !\n&quot;</span>, rt_tick_get());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">hwtimer_sample</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">rt_err_t</span> ret = RT_EOK;</span><br><span class="line">    <span class="type">rt_hwtimerval_t</span> timeout_s; <span class="comment">/* 定时器超时值 */</span></span><br><span class="line">    <span class="type">rt_device_t</span> hw_dev = RT_NULL; <span class="comment">/* 定时器设备句柄 */</span></span><br><span class="line">    <span class="type">rt_hwtimer_mode_t</span> mode; <span class="comment">/* 定时器模式 */</span></span><br><span class="line"></span><br><span class="line">    mode = HWTIMER_MODE_PERIOD;</span><br><span class="line">    timeout_s.sec = <span class="number">5</span>; <span class="comment">/* 秒 */</span></span><br><span class="line">    timeout_s.usec = <span class="number">0</span>; <span class="comment">/* 微秒 */</span></span><br><span class="line">    <span class="comment">/* 查找定时器设备 */</span></span><br><span class="line">    <span class="comment">/* 以读写方式打开设备 */</span></span><br><span class="line">    <span class="comment">/* 设置超时回调函数 */</span></span><br><span class="line">    <span class="comment">/* 设置模式为周期性定时器 */</span></span><br><span class="line">    <span class="comment">/* 设置定时器超时值为5s并启动定时器 */</span></span><br><span class="line"></span><br><span class="line">    hw_dev = rt_device_find(HWTIMER_DEV_NAME);</span><br><span class="line">    ret = rt_device_open(hw_dev, RT_DEVICE_OFLAG_RDWR);</span><br><span class="line">    rt_device_set_rx_indicate(hw_dev, timeout_cb);</span><br><span class="line">    ret = rt_device_control(hw_dev, HWTIMER_CTRL_MODE_SET, &amp;mode);</span><br><span class="line">    rt_device_write(hw_dev, <span class="number">0</span>, &amp;timeout_s, <span class="keyword">sizeof</span>(timeout_s));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 导出到 msh 命令列表中 */</span></span><br><span class="line">    MSH_CMD_EXPORT(hwtimer_sample, hwtimer sample);</span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    hwtimer_sample();</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>内部，外部都是这样<br><img src="https://img-blog.csdnimg.cn/21373de214de49c5a31ed73533443c3b.png" alt="在这里插入图片描述"><br>然后把 字符全删了就正常了<br><img src="https://img-blog.csdnimg.cn/f175974b541a46709dcb5f612d3bd332.png" alt="在这里插入图片描述"></p><h2 id="延时函数"><a href="#延时函数" class="headerlink" title="延时函数"></a>延时函数</h2><p>rt_thread_delay延时的单位是系统节拍，如果每秒系统节拍数这个配置不是1000，延时数值的单位就不是毫秒，<br>rt_thread_mdelay可以直接使用，单位就是毫秒，无需考虑转换</p><h2 id="添加头文件"><a href="#添加头文件" class="headerlink" title="添加头文件"></a>添加头文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">右键工程，属性-------c/c++常规-----路径与符号-------添加，就可以把头文件路径添加到工程</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/821f68a53edd4e6b929724ab3f6f6a90.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAX3pzX2Rhd24=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><hr><h1 id="u8g2库的使用-进度条-为u8g2创建线程注意事项"><a href="#u8g2库的使用-进度条-为u8g2创建线程注意事项" class="headerlink" title="u8g2库的使用 进度条 为u8g2创建线程注意事项"></a>u8g2库的使用 进度条 为u8g2创建线程注意事项</h1><p>厌倦了移植底层，而且主要是想写ui的话，感觉这种库会好一点</p><h2 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h2><p><a href="https://blog.csdn.net/stbu0521/article/details/106419618?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163327576616780271531516%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163327576616780271531516&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-106419618.pc_search_es_clickV2&utm_term=RTT%20U8G2&spm=1018.2226.3001.4187">硬件IIC</a></p><p><a href="https://mculover666.blog.csdn.net/article/details/104685289?utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.no_search_link&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.no_search_link">软件IIC</a></p><p><a href="https://www.cnblogs.com/loadbxh/articles/12074549.html">详解（非标准，参考观看）</a><br><a href="https://github.com/olikraus/u8g2/wiki/u8g2reference">官方API 英文</a><br><a href="https://www.jianshu.com/u/a20ac3518f74">参考文章</a></p><h2 id="进度条"><a href="#进度条" class="headerlink" title="进度条"></a>进度条</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">u8g2_DrawBox</span><span class="params">(<span class="type">u8g2_t</span> *u8g2, <span class="type">u8g2_uint_t</span> x, <span class="type">u8g2_uint_t</span> y, <span class="type">u8g2_uint_t</span> w, <span class="type">u8g2_uint_t</span> h)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">u8g2_DrawFrame</span><span class="params">(<span class="type">u8g2_t</span> *u8g2, <span class="type">u8g2_uint_t</span> x, <span class="type">u8g2_uint_t</span> y, <span class="type">u8g2_uint_t</span> w, <span class="type">u8g2_uint_t</span> h)</span></span><br></pre></td></tr></table></figure><p>进度条</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;board.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;rtdevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;u8g2_port.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">u8g2_box_frame</span><span class="params">(<span class="type">u8g2_t</span> *u8g2,<span class="type">uint16_t</span> a)</span> &#123;</span><br><span class="line">    u8g2_SetFont(u8g2, u8g2_font_ncenB08_tr);</span><br><span class="line">    rt_sprintf(prodedure, <span class="string">&quot;%d/360&quot;</span>,a);</span><br><span class="line">    u8g2_DrawStr(u8g2, <span class="number">70</span>, <span class="number">15</span>, prodedure);</span><br><span class="line">    u8g2_DrawBox(u8g2,<span class="number">4</span>,<span class="number">10</span>,a/<span class="number">6</span>,<span class="number">5</span>);</span><br><span class="line">    u8g2_DrawFrame(u8g2,<span class="number">4</span>,<span class="number">10</span>,<span class="number">60</span>,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">u8g2_ssd1306_12864_hw_i2c_example</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">u8g2_t</span> u8g2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Initialization</span></span><br><span class="line">    u8g2_Setup_ssd1306_i2c_128x64_noname_f( &amp;u8g2, U8G2_R0, u8x8_byte_rt_hw_i2c,u8x8_rt_gpio_and_delay);</span><br><span class="line">    u8g2_InitDisplay(&amp;u8g2);</span><br><span class="line">    u8g2_SetPowerSave(&amp;u8g2, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i= <span class="number">0</span>;  i&lt; <span class="number">360</span>/<span class="number">6</span>; i++) &#123;</span><br><span class="line">        u8g2_ClearBuffer(&amp;u8g2);</span><br><span class="line">            u8g2_box_frame(&amp;u8g2,i);</span><br><span class="line">            u8g2_SendBuffer(&amp;u8g2);</span><br><span class="line">            rt_thread_mdelay(<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* full buffer example, setup procedure ends in _f */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">MSH_CMD_EXPORT(u8g2_ssd1306_12864_hw_i2c_example, i2c ssd1306 sample);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    u8g2_ssd1306_12864_hw_i2c_example();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="为u8g2创建线程注意事项"><a href="#为u8g2创建线程注意事项" class="headerlink" title="为u8g2创建线程注意事项"></a>为u8g2创建线程注意事项</h3><p>刚开始 堆栈大小 给的 512<br>程序会卡在</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_InitDisplay(&amp;u8g2);</span><br></pre></td></tr></table></figure><p>后来改成 1024 就不会卡了<br>u8g2 库的缓存区占用的开销太大了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">u8g2_oled_entry</span><span class="params">(<span class="type">void</span> *parameter)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">u8g2_t</span> u8g2;</span><br><span class="line"></span><br><span class="line">    <span class="type">uint16_t</span> m_last_index = <span class="number">0</span>;   <span class="comment">//上一次的下标，判断数据是否变化</span></span><br><span class="line">    <span class="comment">// Initialization</span></span><br><span class="line">    u8g2_Setup_ssd1306_i2c_128x64_noname_f(&amp;u8g2, U8G2_R0, u8x8_byte_rt_hw_i2c, u8x8_rt_gpio_and_delay);</span><br><span class="line">    u8g2_InitDisplay(&amp;u8g2);</span><br><span class="line">    u8g2_SetPowerSave(&amp;u8g2, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">/*   循环更新       */</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">             <span class="keyword">for</span> (<span class="type">int</span> i= <span class="number">0</span>;  i&lt; <span class="number">360</span>/<span class="number">6</span>; i++) &#123;</span><br><span class="line">        u8g2_ClearBuffer(&amp;u8g2);</span><br><span class="line">            u8g2_box_frame(&amp;u8g2,i);</span><br><span class="line">            u8g2_SendBuffer(&amp;u8g2);</span><br><span class="line">            rt_thread_mdelay(<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        rt_thread_mdelay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">u8g2_ssd1306_12864_hw_i2c_example</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">rt_uint8_t</span> is_init = <span class="number">0</span>;</span><br><span class="line">    <span class="type">rt_thread_t</span> tid1 = RT_NULL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_init &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_kprintf(<span class="string">&quot;sample is running\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> -RT_ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tid1 = rt_thread_create(<span class="string">&quot;u8g2_oled&quot;</span>, u8g2_oled_entry, RT_NULL, <span class="number">1024</span>, U8G2_OLED_THREAD_PRIORITY, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> (tid1 != RT_NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_thread_startup(tid1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> __exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    is_init = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> RT_EOK;</span><br><span class="line"></span><br><span class="line">    __exit: <span class="keyword">if</span> (tid1)</span><br><span class="line">        rt_thread_delete(tid1);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -RT_ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>感觉放在main线程也没问题，不过main线程的 优先级好像是 10。</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
            <tag> rt-thread </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32_keyboard</title>
      <link href="/2021/09/23/stm32-keyboard/"/>
      <url>/2021/09/23/stm32-keyboard/</url>
      
        <content type="html"><![CDATA[<h1 id="usb数字键盘"><a href="#usb数字键盘" class="headerlink" title="usb数字键盘"></a>usb数字键盘</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>单片机：stm32f401ccu6<br>软件 ：keil （编写代码），stm32cubemx（初始化），HID Descriptor tool（生成报文），usb bound（抓包）</p><h2 id="报文设置"><a href="#报文设置" class="headerlink" title="报文设置"></a>报文设置</h2><p><img src="/2021/09/23/stm32-keyboard/1.png" alt="1.png"></p><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>原理图<br><img src="/2021/09/23/stm32-keyboard/2.png" alt="2.png"><br>pcb<br><img src="/2021/09/23/stm32-keyboard/3.png" alt="3.png"><br>3D图<br><img src="/2021/09/23/stm32-keyboard/4.png" alt="4.png"></p><h2 id="固件"><a href="#固件" class="headerlink" title="固件"></a>固件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Firmware</span><br><span class="line"> │  STM32F401CCU6_HID_KEYBOARD.ioc</span><br><span class="line"> │  .mxproject</span><br><span class="line"> │  Core          </span><br><span class="line"> │   │ Inc       对应头文件</span><br><span class="line"> │   │ Src———</span><br><span class="line"> │           │  BUTTOM.c             按键事件响应</span><br><span class="line"> │           │  gpio.c               库文件-GPIO</span><br><span class="line"> │           │  timer.c              库文件-定时器</span><br><span class="line"> │           │  usart.c              库文件-串口</span><br><span class="line"> │           │  keyboard_hid.c       键盘hid发送</span><br><span class="line"> │           │  main.c </span><br><span class="line"> │           │  ADC.c                库文件-ADC</span><br><span class="line"> └─ USB_DEVICE     usb设备的配置</span><br></pre></td></tr></table></figure><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>硬件设计比较简单，直接按键 io口一一对应，本身只图一乐，没有去拓展很多东西，也是直接用的 最小系统板去搭建</p><h2 id="工程文件"><a href="#工程文件" class="headerlink" title="工程文件"></a>工程文件</h2><p><a href="https://gitee.com/zsa1/keyboard_stm32.git">点击 下载工程文件</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教务下载个人成绩</title>
      <link href="/2021/09/06/get_grade/"/>
      <url>/2021/09/06/get_grade/</url>
      
        <content type="html"><![CDATA[<h1 id="教务网下载个人成绩到excel"><a href="#教务网下载个人成绩到excel" class="headerlink" title="教务网下载个人成绩到excel"></a>教务网下载个人成绩到excel</h1><p>参考文章：<a href="https://www.shinenet.cn/archives/3.html">教务处自动登录填写评价</a></p><h2 id="最初的-txt版"><a href="#最初的-txt版" class="headerlink" title="最初的 txt版"></a>最初的 txt版</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正在获取验证码......&quot;</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line">session.get(<span class="string">&quot;http://jwc.swjtu.edu.cn/service/login.html&quot;</span>)</span><br><span class="line">r = session.get(<span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/GetRandomNumberToJPEG?test=&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;yzm.jpg&quot;</span>, <span class="string">&quot;wb+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(r.content)</span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">r&quot;yzm.jpg&quot;</span>)</span><br><span class="line">image.show()</span><br><span class="line">yzm = <span class="built_in">input</span>(<span class="string">&quot;请输入验证码：&quot;</span>)</span><br><span class="line">username=<span class="built_in">input</span>(<span class="string">&quot;请输入学号:&quot;</span>)</span><br><span class="line">password=<span class="built_in">input</span>(<span class="string">&quot;请输入密码:&quot;</span>)</span><br><span class="line">sendmsg = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: password,</span><br><span class="line">    <span class="string">&#x27;ranstring&#x27;</span>: yzm,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">login_header = &#123;</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn/service/login.html&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">r = session.post(<span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/UserLoginAction&quot;</span>, data=sendmsg, headers=login_header)</span><br><span class="line">json = json.loads(r.text)</span><br><span class="line"><span class="comment">#print(json[&#x27;loginMsg&#x27;])</span></span><br><span class="line">sendmsg = &#123;</span><br><span class="line">    <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn/vatuu/UserExitAction&amp;returnUrl&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;returnUrl&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;loginMsg&#x27;</span>: json[<span class="string">&#x27;loginMsg&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line">login_header = &#123;</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn/vatuu/StudentScoreInfoAction?setAction=studentMarkUseProgram&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">r = session.post(<span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/UserLoadingAction&quot;</span>, data=sendmsg, headers=login_header)</span><br><span class="line"></span><br><span class="line">r1 = session.get(</span><br><span class="line">    <span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/StudentScoreInfoAction?setAction=studentScoreQuery&amp;viewType=studentScore&amp;orderType=submitDate&amp;orderValue=desc&quot;</span>,</span><br><span class="line">    headers=login_header)</span><br><span class="line"><span class="comment">#print(&#x27;\n\n\n&#x27;)</span></span><br><span class="line">html = r1.content.decode(<span class="string">&#x27;utf-8&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">key1 = <span class="string">r&#x27;&lt;td &gt;&lt;table class=&quot;table_border&quot;  id=&quot;table3&quot;&gt;(.*?)&lt;/table&gt;&#x27;</span></span><br><span class="line">key2 = <span class="string">r&#x27;&lt;th style=&quot;width:.*?%;&quot;&gt;(.*?)&lt;/th&gt;&#x27;</span></span><br><span class="line">key3 = <span class="string">r&#x27;&lt;td &gt;(.*?)&lt;/td&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">base_re = re.<span class="built_in">compile</span>(key1)  <span class="comment"># 预编译</span></span><br><span class="line">title_re = re.<span class="built_in">compile</span>(key2)  <span class="comment"># 预编译</span></span><br><span class="line">data_re = re.<span class="built_in">compile</span>(key3)  <span class="comment"># 预编译</span></span><br><span class="line"></span><br><span class="line">title = []</span><br><span class="line">data = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> re.findall(base_re, html):</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> re.findall(title_re, i):</span><br><span class="line">        title.append(n)</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> re.findall(data_re, i):</span><br><span class="line">        data.append(m)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;score.txt&#x27;</span>, <span class="string">&#x27;w+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(title)):</span><br><span class="line">        f.write(<span class="string">&#x27;%s&#x27;</span> % title[i].ljust(<span class="number">20</span>))</span><br><span class="line">    f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">        f.write(<span class="string">&#x27;%s&#x27;</span> % <span class="built_in">str</span>(data[n]).strip().ljust(<span class="number">20</span>))</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> num % <span class="number">15</span> == <span class="number">0</span>:</span><br><span class="line">            f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ps：中英文宽度不同，对不齐，，，，将就将就，，，暂时没学操作excel。。懒。。。。。<br>貌似可以自己写判断中英文，，，，，懒。。。。。</p><h2 id="excel版"><a href="#excel版" class="headerlink" title="excel版"></a>excel版</h2><p>修复了点小bug<br>没注意到课程名称是 两个数字，，，，，<br><img src="https://img-blog.csdnimg.cn/f92eb1af613a4897885a54427910709a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAX3pzX2Rhd24=,size_11,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>顺带更新下 excel版本 ，加了点错误警告，自动打开excel，删除验证码图标等（我的pytesseract不知道咋的识别不出来，想试试百度的api，，，懒，，，，emmm，手工输入也挺好，，，）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span>  os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_style</span>(<span class="params">name, height, bold=<span class="number">0</span></span>):</span><br><span class="line">    style = xlwt.XFStyle()</span><br><span class="line">    font = xlwt.Font()</span><br><span class="line">    font.name = name</span><br><span class="line">    font.colour_index = <span class="number">0</span></span><br><span class="line">    font.height = height</span><br><span class="line">    font.bold = bold</span><br><span class="line">    style.font = font</span><br><span class="line">    <span class="keyword">return</span> style</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正在获取验证码......&quot;</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line">session.get(<span class="string">&quot;http://jwc.swjtu.edu.cn/service/login.html&quot;</span>)</span><br><span class="line">r = session.get(<span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/GetRandomNumberToJPEG?test=&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;yzm.jpg&quot;</span>, <span class="string">&quot;wb+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(r.content)</span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">r&quot;yzm.jpg&quot;</span>)</span><br><span class="line">image.show()</span><br><span class="line">yzm = <span class="built_in">input</span>(<span class="string">&quot;请输入验证码：&quot;</span>)</span><br><span class="line">username = <span class="built_in">input</span>(<span class="string">&quot;请输入学号:&quot;</span>)</span><br><span class="line">password = <span class="built_in">input</span>(<span class="string">&quot;请输入密码:&quot;</span>)</span><br><span class="line">sendmsg = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: password,</span><br><span class="line">    <span class="string">&#x27;ranstring&#x27;</span>: yzm,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">login_header = &#123;</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn/service/login.html&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">r = session.post(<span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/UserLoginAction&quot;</span>, data=sendmsg, headers=login_header)</span><br><span class="line">json = json.loads(r.text)</span><br><span class="line"><span class="built_in">print</span>(json[<span class="string">&#x27;loginMsg&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> json[<span class="string">&#x27;loginMsg&#x27;</span>][<span class="number">0</span>:<span class="number">4</span>] == <span class="string">&quot;登录成功&quot;</span>:</span><br><span class="line">    sendmsg = &#123;</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn/vatuu/UserExitAction&amp;returnUrl&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;returnUrl&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;loginMsg&#x27;</span>: json[<span class="string">&#x27;loginMsg&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    login_header = &#123;</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://jwc.swjtu.edu.cn/vatuu/StudentScoreInfoAction?setAction=studentMarkUseProgram&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    r = session.post(<span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/UserLoadingAction&quot;</span>, data=sendmsg, headers=login_header)</span><br><span class="line"></span><br><span class="line">    r1 = session.get(</span><br><span class="line">        <span class="string">&quot;http://jwc.swjtu.edu.cn/vatuu/StudentScoreInfoAction?setAction=studentScoreQuery&amp;viewType=studentScore&amp;orderType=submitDate&amp;orderValue=desc&quot;</span>,</span><br><span class="line">        headers=login_header)</span><br><span class="line">    <span class="comment"># print(&#x27;\n\n\n&#x27;)</span></span><br><span class="line">    html = r1.content.decode(<span class="string">&#x27;utf-8&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    key1 = <span class="string">r&#x27;&lt;td &gt;&lt;table class=&quot;table_border&quot;  id=&quot;table3&quot;&gt;(.*?)&lt;/table&gt;&#x27;</span></span><br><span class="line">    key2 = <span class="string">r&#x27;&lt;th style=&quot;width:.*?%;&quot;&gt;(.*?)&lt;/th&gt;&#x27;</span></span><br><span class="line">    key3 = <span class="string">r&#x27;&lt;td &gt;(.*?)&lt;/td&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">    base_re = re.<span class="built_in">compile</span>(key1)  <span class="comment"># 预编译</span></span><br><span class="line">    title_re = re.<span class="built_in">compile</span>(key2)  <span class="comment"># 预编译</span></span><br><span class="line">    data_re = re.<span class="built_in">compile</span>(key3)  <span class="comment"># 预编译</span></span><br><span class="line"></span><br><span class="line">    title = []</span><br><span class="line">    data = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> re.findall(base_re, html):</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> re.findall(title_re, i):</span><br><span class="line">            title.append(n)</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> re.findall(data_re, i):</span><br><span class="line">            data.append(m)</span><br><span class="line">    <span class="comment"># 创建一个excel文件</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;开始写入excel&#x27;</span>)</span><br><span class="line">    f = xlwt.Workbook()</span><br><span class="line">    <span class="comment"># 创建一个名为学生的sheet</span></span><br><span class="line">    sheet1 = f.add_sheet(<span class="string">&#x27;成绩&#x27;</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 写第一行</span></span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    _<span class="built_in">list</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(title)):</span><br><span class="line">        sheet1.write(row, i, title[i].strip(), set_style(<span class="string">&#x27;Times New Roman&#x27;</span>, <span class="number">220</span>, <span class="literal">True</span>))</span><br><span class="line">    <span class="comment"># 写数据</span></span><br><span class="line">    row = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">        sheet1.write(row, _<span class="built_in">list</span>, data[n].strip(), set_style(<span class="string">&#x27;Times New Roman&#x27;</span>, <span class="number">220</span>, <span class="literal">True</span>))</span><br><span class="line">        _<span class="built_in">list</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> _<span class="built_in">list</span> == <span class="number">15</span>:</span><br><span class="line">            _<span class="built_in">list</span> = <span class="number">0</span></span><br><span class="line">            row += <span class="number">1</span></span><br><span class="line">    f.save(<span class="string">&#x27;score.xls&#x27;</span>)</span><br><span class="line">    os.startfile(<span class="string">&#x27;score.xls&#x27;</span>)</span><br><span class="line">    os.remove(<span class="string">&quot;yzm.jpg&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;写入完毕,3s后自动关闭&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    os.remove(<span class="string">&quot;yzm.jpg&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;登录失败，请重新尝试,3s后自动关闭&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="打包exe"><a href="#打包exe" class="headerlink" title="打包exe"></a>打包exe</h2><p>再顺带写个打包教程（怕自己忘了）<br>在.py 文件下，打开cmd，输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F 文件名.py -i （路径）图片名.ico -n 打包后的名字</span><br></pre></td></tr></table></figure><p>当然直接输路径更好，图片一定要.ico  <a href="https://convertio.co/zh/jpg-ico/">在线转换网址</a><br>如果用到输入输出啥的，不需要控制台小黑窗，可以加 -w</p><ul><li>F 是打包成单个可执行文件，其他人可以直接运行。否则需要一起打包 build 下面的文件（好像。。）</li></ul><p><strong>提示：如果没有填 课程评价，是没法爬出来的，，，</strong></p>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>app inventor wxbit版开发上位机</title>
      <link href="/2021/08/14/app-inventor/"/>
      <url>/2021/08/14/app-inventor/</url>
      
        <content type="html"><![CDATA[<h1 id="app-inventor-wxbit版开发上位机"><a href="#app-inventor-wxbit版开发上位机" class="headerlink" title="app inventor wxbit版开发上位机"></a>app inventor wxbit版开发上位机</h1><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>网站地址：<a href="https://www.wxbit.com/">app inventor</a><br>usb转ttl串口模块<br>atk-hc05_v13蓝牙模块<br>vofa+上位机</p><h2 id="上位机"><a href="#上位机" class="headerlink" title="上位机"></a>上位机</h2><p>其实最开始想写个蓝牙串口，后来发现好像这个组件的性能不太行，过于勉强，但做个简单的上位机控制还是够的。</p><h3 id="页面设计："><a href="#页面设计：" class="headerlink" title="页面设计："></a>页面设计：</h3><p><img src="https://img-blog.csdnimg.cn/0dde42b86d9342548168d040c0c30a47.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>动图用<br><img src="https://img-blog.csdnimg.cn/1adead29e80d46df9701218dfe0d72f2.png" alt="在这里插入图片描述"><br>布局必须用这些，<br><img src="https://img-blog.csdnimg.cn/6eb4b0a1e200423c8cb4293df93cadcb.png" alt="在这里插入图片描述"><br>里面放按钮，列表选择框等<br><img src="https://img-blog.csdnimg.cn/1641511600c844a9bfa52aa4b79e3998.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a68bfedceb7442e6bf230a8c4c8c913e.png" alt="在这里插入图片描述"><br>不手动输入的文字 建议用标签<br><img src="https://img-blog.csdnimg.cn/de2669ddf36145738982fa7942d1421d.png" alt="在这里插入图片描述"></p><p>接收发送 用文本输入框<br><img src="https://img-blog.csdnimg.cn/80a588b6a8954efc95aef8e8f90b7e82.png" alt="在这里插入图片描述"><br>启动器设置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android.bluetooth.adapter.action.REQUEST_ENABLE</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c5f0d2b15ccf440f8af14f308f1fa3c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>定时器设为1ms<br><img src="https://img-blog.csdnimg.cn/ca76e89857b5483eb5df946008ed1347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>适当调整各个模块的位置，大小颜色，布局</p><p>应用图标，和名称<br>图标可以在这里生成 <a href="https://tool.lu/appicon/">app icon生成</a><br><img src="https://img-blog.csdnimg.cn/e388d7169be94d199b075b87393787a5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>screen 里把状态栏 标题栏隐藏会好看点<br><img src="https://img-blog.csdnimg.cn/68a3dcd39e79401ab7700e82ea8463fd.png" alt="在这里插入图片描述"><br>修改每个模块的名字方便逻辑设计的时候 清楚调用的是哪一个模块</p><h3 id="逻辑设计"><a href="#逻辑设计" class="headerlink" title="逻辑设计"></a>逻辑设计</h3><p><img src="https://img-blog.csdnimg.cn/13d3ec4408504487a56abfe0be9ea376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2783b0983f494f22a439c4bbb5a3f712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/eee31d90e7b845ff9458c620f1964b61.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>系统默认 utf-8<br>要改成 gbk或者其他编码方式可以自行修改，<br>右边 嵌个文本 文本是编码的名字<br>或着加个选择框 改成交互选择的</p><p><img src="https://img-blog.csdnimg.cn/7de341b9ad05403ea7079cddd7a7c39e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载测试<br><img src="https://img-blog.csdnimg.cn/57cddf67c9d74b719aff7b42535ce056.png" alt="在这里插入图片描述"></p><h2 id="蓝牙模块atk-hc05"><a href="#蓝牙模块atk-hc05" class="headerlink" title="蓝牙模块atk-hc05"></a>蓝牙模块atk-hc05</h2><p>其他蓝牙模块按照 官方手册设置 调好波特率，连上就行<br>正点原子官网资料：<a href="http://www.openedv.com/posts/list/12486.htm">资料</a><br>led引脚不管<br>先将key引脚接vcc<br>串口波特率 38400</p><p><img src="https://img-blog.csdnimg.cn/111b3e0fcebf416db7cd98b1ea6a7cdd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择 \r\n<br><img src="https://img-blog.csdnimg.cn/5bbe603d9aaf4e5c9573a4dbd80d278d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">发送 </span><br><span class="line">at+reset</span><br><span class="line">at+init</span><br><span class="line">at+role=<span class="number">0</span></span><br><span class="line">at+name= #名字</span><br><span class="line">at+pswd= #密码</span><br><span class="line">at+uart= <span class="number">38400</span>,<span class="number">0</span>,<span class="number">0</span>  #因为at模式是<span class="number">38400</span>，将匹配模式下也设为<span class="number">38400</span> ，方便调试，省去频繁切换波特率</span><br></pre></td></tr></table></figure><p>进入 匹配模式<br>把key引脚悬空或者接地，进入匹配模式</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>打开app<br>自动显示开启蓝牙<br>但仍需手动进入手机蓝牙设置里，匹配，输入密码<br>然后点击列表选择框 选择蓝牙<br>再点击 连接蓝牙按钮</p><p>因为蓝牙地址被保存，<br>之后每次只用点击 连接蓝牙 就行<br>显示蓝牙已连接后 可以开始使用</p><h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><p>手机端发送给pc端 ：字符和汉字都可以正常 发送 但文本不能够太长，过长会被截断，如果是汉字会出现乱码</p><p>pc端发送给手机端 ：会被截断，比如发送123456，会分成 12，3456 或者1，23456等<br>所以采用积累每一次的，普通单字节字符没有问题，但因为汉字是两字节，被截断后就会出现乱码。<br>ef bf bd</p><p>换了几个pc串口助手， 手机蓝牙串口助手，修改了波特率，效果一样。展示没找到问题</p><p>总结：做为 一个上位机给单片机 不连续的不太长的数据 是没问题的。。。。</p><p>ps：总还是有些bug的，能用就行</p><hr><h1 id="2021-8-15-BUG修补"><a href="#2021-8-15-BUG修补" class="headerlink" title="2021.8.15 BUG修补"></a>2021.8.15 BUG修补</h1><p>定时间隔改成1000ms，就没事了<br><img src="https://img-blog.csdnimg.cn/f5592847a6bc41b082373f7aa710a69c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNTIxODgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>舍弃了更新速率，但好在数据没有丢失（伪）<br>如果是要进行数据处理的话，可能就不太行了，因为每一次更新的数据字节数不固定，只是将前一次的字符和当次字符连接在一起。</p>]]></content>
      
      
      <categories>
          
          <category> 个人作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝牙上位机 </tag>
            
            <tag> app_inventor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/02/21/hello-world/"/>
      <url>/2021/02/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
